package Formularios;

import Clases.Datos;
import Clases.Opcion;
import Clases.Utilidades;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import sun.swing.table.DefaultTableCellHeaderRenderer;

public class FrmFactura extends javax.swing.JInternalFrame {

    private Datos misDatos;
    private DefaultTableModel mitabla;

    public void setDatos(Datos misDatos) {
        this.misDatos = misDatos;
    }

    public FrmFactura() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox();
        cmbProducto = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btnBuscarProducto = new javax.swing.JButton();
        btnBuscarCliente = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnAdicionar = new javax.swing.JButton();
        btnEliminarTodo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAdicionar1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalle = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtTotalCantidad = new javax.swing.JTextField();
        txtTotalValor = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Nueva Factura");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setText("Fecha:");

        txtFecha.setEnabled(false);

        jLabel2.setText("Cliente:");

        cmbCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cmbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClienteActionPerformed(evt);
            }
        });

        cmbProducto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        jLabel3.setText("Producto:");

        btnBuscarProducto.setText("...");
        btnBuscarProducto.setToolTipText("Busca Un Producto");
        btnBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductoActionPerformed(evt);
            }
        });

        btnBuscarCliente.setText("...");
        btnBuscarCliente.setToolTipText("Busca Un Cliente");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        jLabel4.setText("Cantidad:");

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/1447575399_shopping-add.png"))); // NOI18N
        btnAdicionar.setToolTipText("Adicionar Producto A La Factura");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnEliminarTodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/1447575567_free-27.png"))); // NOI18N
        btnEliminarTodo.setToolTipText("Elimina Todos Los Productos De La Factura");
        btnEliminarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTodoActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/1447575961_shopping-cancel.png"))); // NOI18N
        btnEliminar.setToolTipText("Elimina Producto De La Factura");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnAdicionar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/1447576122_shopping-ok.png"))); // NOI18N
        btnAdicionar1.setToolTipText("Grabar Factura");
        btnAdicionar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionar1ActionPerformed(evt);
            }
        });

        tblDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDetalle);

        jLabel5.setText("Totales:");

        txtTotalCantidad.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalCantidad.setEnabled(false);

        txtTotalValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalValor.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cmbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbProducto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionar1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTotalCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotalValor, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addGap(5, 5, 5)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdicionar, btnAdicionar1, btnEliminar, btnEliminarTodo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtTotalCantidad, txtTotalValor});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnEliminarTodo)
                    .addComponent(btnEliminar)
                    .addComponent(btnAdicionar1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(txtTotalCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdicionar, btnAdicionar1, btnEliminar, btnEliminarTodo});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // Cargamos Clientes
        Opcion opcion = new Opcion("","Seleccione Un Cliente...");
        cmbCliente.addItem(opcion);
        for (int i = 0; i < misDatos.numeroClientes(); i++) {
            opcion = new Opcion(
                    misDatos.getClientes()[i].getIdCliente(),
                    misDatos.getClientes()[i].getNombres() + " "
                    + misDatos.getClientes()[i].getApellidos());
            cmbCliente.addItem(opcion);
        }

        // Cargamos Productos
        opcion = new Opcion("NA", "Seleccione Un Producto...");
        cmbProducto.addItem(opcion);
        for (int i = 0; i < misDatos.numeroProductos(); i++) {
            opcion = new Opcion(
                    misDatos.getProductos()[i].getIdPrducto(),
                    misDatos.getProductos()[i].getDescripcion());
            cmbProducto.addItem(opcion);
        }

        //colocamos fecha del sistema       
        txtFecha.setText(Utilidades.formatDate(new Date()));

        //mostramos totales en ceros
        txtTotalCantidad.setText("0");
        txtTotalValor.setText("0");
        //formateamos la tabla
        llenarTabla();
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed

        if (cmbProducto.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Debe Seleccionar Un Producto");
            cmbProducto.requestFocusInWindow();
            return;
        }

        if (txtCantidad.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe Dijitar Una Cantidad");
            txtCantidad.requestFocusInWindow();
            return;
        }

        if (!Utilidades.esNumerico(txtCantidad.getText())) {
            JOptionPane.showMessageDialog(this, "DEBE Digitar Un Valor Numerico.");
            txtCantidad.setText("");
            txtCantidad.requestFocusInWindow();
            return;
        }

        int Cantidad = Integer.parseInt(txtCantidad.getText());
        if (Cantidad <= 0) {
            JOptionPane.showMessageDialog(this, "DEBE Digitar Un Valor Mayor Que Cero.");
            txtCantidad.setText("");
            txtCantidad.requestFocusInWindow();
            return;
        }

        //Buscamos los datos de  el producto seleccionado
        int posicion = misDatos.posicionProducto(((Opcion) cmbProducto.getSelectedItem()).getValor());

        //adicionamos productos a la tabla
        String registro[] = new String[5];
        registro[0] = misDatos.getProductos()[posicion].getIdPrducto();
        registro[1] = misDatos.getProductos()[posicion].getDescripcion();
        registro[2] = "" + misDatos.getProductos()[posicion].getPrecio();
        registro[3] = "" + Cantidad;
        registro[4] = "" + (Cantidad * misDatos.getProductos()[posicion].getPrecio());
        mitabla.addRow(registro);

        //inicializamos campos
        cmbProducto.setSelectedIndex(0);
        txtCantidad.setText("");
        cmbProducto.requestFocusInWindow();

        //actualizamos totales
        totales();


    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnAdicionar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionar1ActionPerformed
        if (cmbCliente.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Debe Seleccionar Un Cliente");
            cmbCliente.requestFocusInWindow();
            return;
        }

        int totalCantidad = new Integer(txtTotalCantidad.getText());
        if (totalCantidad == 0) {
            JOptionPane.showMessageDialog(this, "Debe Ingresar Detalla De La Factura");
            cmbProducto.requestFocusInWindow();
            return;
        }

        int Respuesta = JOptionPane.showConfirmDialog(this, "Esta  Seguro De Grabar Esta Factura");
        if (Respuesta != 0) {
            return;
        }

        //adicionamos un consecutivo a la Factura
        int numFac = misDatos.getNumeroFactura() + 1;

        // grabamos la factura
        FileWriter fw = null;
        PrintWriter pw = null;
        try {
            fw = new FileWriter("Data/facturas.txt", true);
            pw = new PrintWriter(fw);

            //encabezado de factura
            String aux = "1|" + numFac + "|"
                    + ((Opcion) cmbCliente.getSelectedItem()).getValor() + "|"
                    + ((Opcion) cmbCliente.getSelectedItem()).getDescripcion() + "|"
                    + txtFecha.getText();
            pw.println(aux);

            //Detalle de la Factura
            int num = tblDetalle.getRowCount();
            for (int i = 0; i < num; i++) {
                aux = "2|"
                        + Utilidades.objectToString(tblDetalle.getValueAt(i, 0)) + "|"
                        + Utilidades.objectToString(tblDetalle.getValueAt(i, 1)) + "|"
                        + Utilidades.objectToString(tblDetalle.getValueAt(i, 2)) + "|"
                        + Utilidades.objectToString(tblDetalle.getValueAt(i, 3)) + "|"
                        + Utilidades.objectToString(tblDetalle.getValueAt(i, 4));

                pw.println(aux);
            }

        } catch (Exception e1) {
            e1.printStackTrace();
        } finally {
            try {
                if (fw != null) {
                    fw.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }

        JOptionPane.showMessageDialog(this, "Factura Generada Con Exito");
        misDatos.setNumeroFactura(numFac);

        //inicializamos campos
        cmbCliente.setSelectedIndex(0);
        limpiarTabla();
        totales();
        cmbCliente.requestFocusInWindow();


    }//GEN-LAST:event_btnAdicionar1ActionPerformed

    private void btnEliminarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTodoActionPerformed
        int Respuesta = JOptionPane.showConfirmDialog(this, "Esta  Seguro De Borrar El Detalle De La Factura");
        if (Respuesta != 0) {
            return;
        }
        limpiarTabla();
        totales();
    }//GEN-LAST:event_btnEliminarTodoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (cmbProducto.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Debe Seleccionar Un Producto");
            cmbProducto.requestFocusInWindow();
            return;
        }

        try {
            DefaultTableModel modelo = (DefaultTableModel) tblDetalle.getModel();
            int filas = tblDetalle.getRowCount();
            for (int i = 0; filas > i; i++) {
                String idTabla = Utilidades.objectToString(tblDetalle.getValueAt(i, 0));
                String idCombo = ((Opcion) cmbProducto.getSelectedItem()).getValor();
                if (idTabla.equals(idCombo)) {
                    modelo.removeRow(i);
                    //actualizamos totales
                    totales();
                    return;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        FrmBusquedaCliente miBusqueda = new FrmBusquedaCliente(null, closable);
        miBusqueda.setDatos(misDatos);
        miBusqueda.setLocationRelativeTo(null);
        miBusqueda.setVisible(true);
        String Rst = miBusqueda.getRespuesta();
        if (Rst.equals("")) {
            return;
        }
        for (int i = 0; i < cmbCliente.getItemCount(); i++) {
            if (((Opcion) cmbCliente.getItemAt(i)).getValor().equals(Rst)) {
                cmbCliente.setSelectedIndex(i);
                return;
            }
        }


    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductoActionPerformed
        FrmBusquedaProductos miBusqueda = new FrmBusquedaProductos(null, closable);
        miBusqueda.setDatos(misDatos);
        miBusqueda.setLocationRelativeTo(null);
        miBusqueda.setVisible(true);
        String Rst = miBusqueda.getRespuesta();
        if (Rst.equals("")) {
            return;
        }
        for (int i = 0; i < cmbProducto.getItemCount(); i++) {
            if (((Opcion) cmbProducto.getItemAt(i)).getValor().equals(Rst)) {
                cmbProducto.setSelectedIndex(i);
                return;
            }
        }
    }//GEN-LAST:event_btnBuscarProductoActionPerformed

    private void cmbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClienteActionPerformed
      
    }//GEN-LAST:event_cmbClienteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAdicionar1;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnBuscarProducto;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarTodo;
    private javax.swing.JComboBox cmbCliente;
    private javax.swing.JComboBox cmbProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDetalle;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtTotalCantidad;
    private javax.swing.JTextField txtTotalValor;
    // End of variables declaration//GEN-END:variables

    private void llenarTabla() {
        String titulos[] = {"ID Producto", "Descripcion", "Precio", "Cantidad",
            "Valor"};

        mitabla = new DefaultTableModel(null, titulos);
        tblDetalle.setModel(mitabla);

        //alinear campos numericos a la Derecha
        DefaultTableCellRenderer tcr = new DefaultTableCellHeaderRenderer();
        tcr.setHorizontalAlignment(SwingConstants.RIGHT);
        tblDetalle.getColumnModel().getColumn(2).setCellRenderer(tcr);
        tblDetalle.getColumnModel().getColumn(3).setCellRenderer(tcr);
        tblDetalle.getColumnModel().getColumn(4).setCellRenderer(tcr);
    }

    private void totales() {

        int num = tblDetalle.getRowCount();
        int SumaCantidad = 0, SumaValor = 0;
        for (int i = 0; i < num; i++) {
            SumaCantidad += Utilidades.objectToInt(tblDetalle.getValueAt(i, 3));
            SumaValor += Utilidades.objectToInt(tblDetalle.getValueAt(i, 4));

        }
        txtTotalCantidad.setText("" + SumaCantidad);
        txtTotalValor.setText("" + SumaValor);

    }

    public void limpiarTabla() {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tblDetalle.getModel();
            int filas = tblDetalle.getRowCount();
            for (int i = 0; filas > i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
